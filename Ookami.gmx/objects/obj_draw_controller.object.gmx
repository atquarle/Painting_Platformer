<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>paintPoints = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.slow) {
    if(mouse_check_button(mb_left)) {
        ds_list_add(paintPoints, mouse_x, mouse_y);
    } else if(ds_list_size(paintPoints) &gt; 0) {
        size = ds_list_size(paintPoints);
        if(size &gt; 2) {
            X = paintPoints[| 0];
            Y = paintPoints[| 1];
            W = paintPoints[| size-2]-X;
            W += sign(W)*6;
            for(i = 3; i &lt; size; i+=2) {
                Y += paintPoints[| i];
            }
            Y /= (0.5*size);
            obj = instance_create(X,Y,obj_platform);
            with(obj) {
                image_xscale = other.W/sprite_width;
                if(place_meeting(x,y,obj_player)) instance_destroy();
            }
        }
        ds_list_clear(paintPoints);
    }
} else {
    ds_list_clear(paintPoints);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
if(ds_list_size(paintPoints) == 2) {
    X = paintPoints[| 0];
    Y = paintPoints[| 1];
    draw_circle(X,Y,3,false);
} else if(ds_list_size(paintPoints) &gt; 2) {
    xPrev = paintPoints[| 0];
    yPrev = paintPoints[| 1];
    draw_circle(xPrev,yPrev,3,false);
    for(i = 2; i &lt; ds_list_size(paintPoints); i+=2) {
        X = paintPoints[| i];
        Y = paintPoints[| i+1];
        draw_line_width(xPrev,yPrev,X,Y,6);
        draw_circle(X,Y,3,false);
        xPrev = X;
        yPrev = Y;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
